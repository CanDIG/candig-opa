version: '3'
services:
#  oidc1:
#    container_name: oidc1
#    image: jboss/keycloak:15.0.1
#    ports:
#      - "8080:8080"
#      - "8443:8443"
#    volumes:
#      - ./oidc/tls_oidc1.crt:/etc/x509/https/tls.crt
#      - ./oidc/tls_oidc1.key:/etc/x509/https/tls.key
#    environment:
#      KEYCLOAK_USER: kcadmin
#      KEYCLOAK_PASSWORD: admin
#      USER1: user1
#      USER1PWD: pass1
#      USER2: user2
#      USER2PWD: pass2
#  oidc2:
#    container_name: oidc2
#    image: jboss/keycloak:15.0.1
#    ports:
#      - "8081:8080"
#      - "8444:8443"
#    volumes:
#      - ./oidc/tls_oidc2.crt:/etc/x509/https/tls.crt
#      - ./oidc/tls_oidc2.key:/etc/x509/https/tls.key
#    environment:
#      KEYCLOAK_USER: kcadmin
#      KEYCLOAK_PASSWORD: admin
#      USER1: user3
#      USER1PWD: pass3
#      USER2: user4
#      USER2PWD: pass4

  opa:
    image: openpolicyagent/opa:latest
    ports:
      - 8181:8181
    volumes:
      - ./permissions_engine/permissions.rego:/policy.rego
      - ./permissions_engine/idp.rego:/idp.rego
      - ./permissions_engine/authz.rego:/authz.rego
      - ./permissions_engine/tls.crt:/public.crt
      - ./permissions_engine/tls.key:/private.key
      - ./permissions_engine/data.json:/data.json
      - ./rootCA.crt:/rootCA.crt
    environment:
      IDP: https://auth.docker.localhost:8443/auth/realms/candig/
      ROOT_CA: /rootCA.crt
      IDP_CLIENT_ID: mock_permissions_client
      IDP_CLIENT_SECRET: mockpermissions_secret
      CLIENT_SECRET_ROOT: my-secret-root-token
      CLIENT_SECRET_SERVICE: my-secret-service-token
    command:
      - "run"
      - "--server"
      - "--addr"
      - "https://0.0.0.0:8181"
      - "--log-level=debug"
      - "--tls-cert-file=/public.crt"
      - "--tls-private-key-file=/private.key"
      - "--authentication=token"
      - "--authorization=basic"
      - "/authz.rego"
      - "/policy.rego"
      - "/idp.rego"
      - "/data.json"
#    networks:
#      - bridge-net
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
#    logging: *default-logging
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8181" ]
      interval: 30s
      timeout: 20s
      retries: 3
#  db-katsu:
#    image: postgres:buster
#    container_name: db-katsu
#    environment:
#      POSTGRES_DB: metadata
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: admin
#    ports:
#      - "5432:5432"
#    volumes:
#      - katsu-db-data:/var/lib/postgresql/data
#  katsu:
#    build: katsu
#    container_name: katsu
#    volumes:
#      - ./katsu_entrypoint.sh:/app/katsu_entrypoint.sh
#      - ./rootCA.crt:/rootCA.crt
#    entrypoint: ["/app/katsu_entrypoint.sh"]
#    ports:
#      - "8001:8000"
#    depends_on:
#      - db-katsu
#      - opa
#    environment:
#      POSTGRES_HOST: "db-katsu"
#      POSTGRES_PORT: 5432
#      POSTGRES_DATABASE: metadata
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: admin
#      CANDIG_OPA_URL: https://opa:8181
#      CANDIG_OPA_VERSION: rego_dev_playground
#      ROOT_CA: /rootCA.crt
#      PERMISSIONS_SECRET: my-secret-service-token
volumes:
  katsu-db-data:
